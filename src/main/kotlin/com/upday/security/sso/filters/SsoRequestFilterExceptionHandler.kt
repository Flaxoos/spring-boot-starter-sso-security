package com.upday.security.sso.filters

import com.upday.security.sso.excpetions.SsoException
import org.springframework.beans.factory.annotation.Qualifier
import org.springframework.stereotype.Component
import org.springframework.web.filter.OncePerRequestFilter
import org.springframework.web.servlet.HandlerExceptionResolver
import javax.servlet.FilterChain
import javax.servlet.http.HttpServletRequest
import javax.servlet.http.HttpServletResponse

/**
 * Intercepts exception generated by the [SsoRequestFilter] and passes them to the [exceptionResolver] defined in the context for handling
 *
 * @property exceptionResolver the context's exceptionResolver
 *
 * @author Ido Flasch
 */
@Component
class SsoRequestFilterExceptionHandler(
    @Qualifier("handlerExceptionResolver") private val exceptionResolver: HandlerExceptionResolver
) : OncePerRequestFilter() {

    /**
     * Pass [SsoRequestFilter] exceptions to the [exceptionResolver]
     *
     * @param request the request
     * @param response the response
     * @param filterChain the filter chain
     */
    override fun doFilterInternal(
        request: HttpServletRequest,
        response: HttpServletResponse,
        filterChain: FilterChain
    ) {
        try {
            filterChain.doFilter(request, response)
        } catch (e: Exception) {
            exceptionResolver.resolveException(request, response, null, e)
        }
    }
}
