package com.upday.security.sso.excpetions

import com.upday.security.sso.authentication.SsoAuthenticationTokenProvider

sealed class SsoException(message: String, reason: Throwable? = null) : Exception(message, reason) {

    sealed class SsoRequestFilterException(message: String, reason: Throwable? = null) : SsoException(message, reason) {
        /**
         * Exception indicating that an expected request header was missing
         *
         * @param header the missing header
         */
        class MissingHeaderException(header: String) : SsoRequestFilterException("Missing Required Request Header $header")

        /**
         * Exception indicating a failure verifying an sso token
         *
         * @param reason the exception generated by the [SsoAuthenticationTokenProvider]
         */
        class SsoTokenVerificationException(reason: Exception) :
            SsoRequestFilterException("Id token verification failed", reason)
    }

    /**
     * Exception indicating that a user was not found in the database
     **
     * @param message optional message to override the default "User not found"
     */
    class UserNotFoundException(message: String = "User not found") :
        SsoException(message)

}
